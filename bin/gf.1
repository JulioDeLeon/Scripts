.\" Automatically generated by Pandoc 3.1.2
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "gf" "1" "May 2023" "0.0.1" ""
.hy
.SH NAME
.PP
gf - look for given regex in a file (or files) in a flexible manner
.SH SYNOPSIS
.PP
\f[B]gf\f[R] -s \f[I]PATTERN\f[R] [\f[I]OPTION\f[R]]
.PP
\f[B]gf\f[R] -s \f[I]PATTERN\f[R]
.SH DESCRIPTION
.PP
\f[B]gf\f[R] is a tool which will search for a given \f[I]PATTERN\f[R]
within the filesystem, recursively searching at and below the current
working directory.
There are options to ignore or target particular files through flags as
well.
.SH OPTION
.TP
\f[B]-s\f[R], \f[B]\[en]search\f[R] \f[I]PATTERN\f[R]
accepts a pattern which will be searched for within files.
.TP
\f[B]-t\f[R], \f[B]\[en]target\f[R] \f[I]PATTERN\f[R]
accepts a pattern to search in only files that match the given pattern.
.TP
\f[B]-i\f[R], \f[B]\[en]ignore\f[R] \f[I]PATTERN\f[R]
accepts a pattern to NOT search in files that match the given pattern.
.TP
\f[B]-d\f[R], \f[B]\[en]debug\f[R]
enable debug logs
.TP
\f[B]-c\f[R], \f[B]\[en]context\f[R] \f[I]NUMBER\f[R]
number of lines to print to console BEFORE and AFTER finding a match for
the given search pattern
.TP
\f[B]-m\f[R] \f[B]\[en]maxline\f[R] \f[I]NUMBER\f[R]
maximum number of lines allowed to read per file.
Used to speed up searching and traversal.
.SH EXAMPLES
.TP
\f[B]gf -s \[lq]myRegex[ab]+\[rq]\f[R]
simple example of looking for a pattern recursively within the current
working directory.
.TP
\f[B]gf -s \[lq]insomeJson\[rq] -t \[lq]\[rs].json\[rq]\f[R]
example of searching for a term within files which match a JSON file
extension.
.TP
\f[B]gf -s \[lq]insomeJson\[rq] \[en]ignore \[lq]\[rs].json\[rq]\f[R]
example of searching for a term within files which do not have a JSON
file extension.
.TP
\f[B]gf -s \[lq]someTerm\[rq] -c 3\f[R]
simple example of looking for a pattern recursively within the current
working directory, print 3 lines before and after the line of the
matched term within any particular file.
.TP
\f[B]gf -s \[lq]someTerm\[rq] -d\f[R]
simple example of looking for a pattern recursively within the current
working directory, printing debug logs.
.SH EXIT VALUES
.TP
\f[B]0\f[R]
SUCCESS
.TP
\f[B]1\f[R]
ERROR
.SH BUGS
.PP
Probably
.SH AUTHORS
Julio de Leon.
